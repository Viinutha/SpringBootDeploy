plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.palantir.docker' version '0.33.0'
	id "com.palantir.docker-run" version "0.33.0"}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}
docker{
	name "mycoolapp"
	dockerfile file('DockerFile')
	copySpec.from(jar).rename(".*","app.jar")
	buildArgs(['JAR_FILE':"app.jar"])
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
	useJUnitPlatform()
}
//task prepareDockerfileTemplate(type: Copy) {
//	from "src/main/resources/docker"
//	include "Dockerfile"
//	filter { it.replaceAll('<%=name%>', project.name) }
//	filter { it.replaceAll('<%=version%>', project.version) }
//	into "$buildDir"
//}
//// add explicit dependencies, otherwise we get warning at console
//dockerPrepare.dependsOn bootJar
//bootJar.dependsOn prepareDockerfileTemplate
//bootJarMainClassName.dependsOn prepareDockerfileTemplate
//bootRunMainClassName.dependsOn prepareDockerfileTemplate

// https://plugins.gradle.org/plugin/com.palantir.docker
//docker {
//	name "${project.name}:${project.version}"
//	files 'springbootgradelwithgithubactions1.jar'
//	tag 'DockerHub', "Viinutha/SpringBootDeploy:${project.version}"
//}
//// https://plugins.gradle.org/plugin/com.palantir.docker-run
//dockerRun {
//	name "${project.name}"
//	image "${project.name}:${project.version}"
//	ports '8087:8087'
//	clean true
//}
